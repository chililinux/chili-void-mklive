#!/usr/bin/env bash
#shellcheck disable=SC2145,SC2001,SC2188,SC2015,SC2155,SC2317,SC2320,SC2291,SC2034,SC2120,SC2086,SC2319
#shellcheck disable=SC2016,SC2154,SC2207,SC2166,SC2128,SC2059,SC2140,SC2031,SC2030,SC2036,SC2119,SC2027

#  void-parted - disk partitioning utility
#  Created: 2022/12/24
#  Altered: 2024/03/08
#
#  Copyright (c) 2022-2024, Vilmar Catafesta <vcatafesta@gmail.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
############################################################################
#export LANGUAGE=pt_BR
export TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAIN=void-parted

#debug
export PS4='${red}${0##*/}${green}[$FUNCNAME]${pink}[$LINENO]${reset} '
#set -x
#set -e
shopt -s extglob

#system
readonly APP="${0##*/}"
readonly _VERSION_='1.0.1-20240308'
readonly distro=$(uname -n)
readonly DEPENDENCIES=(parted fdisk)

function conf() {
    read -r -p "$1 [N/s]"
	[[ ${REPLY^} == "" ]] && return 1
	[[ ${REPLY^} == [SY] ]] && return 0 || return 1
}

function sh_setvarcolors() {
	# does the terminal support true-color?
	if [[ $(tput colors) -eq 256 ]]; then
		#tput setaf 127 | cat -v  #capturar saida
		tput sgr0 # reset colors
		bold=$(tput bold)
		reset=$(tput sgr0)
		black=$(tput setaf 0)
		red=$(tput setaf 1)
		green=$(tput setaf 2)
		yellow=$(tput bold)$(tput setaf 3)
		blue=$(tput setaf 4)
		pink=$(tput setaf 5)
		cyan=$(tput setaf 6)
		white=$(tput setaf 7)
		orange=$(tput setaf 3)
		purple=$(tput setaf 125)
		violet=$(tput setaf 61)
	else # doesn't support true-color
		bold=''
		reset="\e[0m"
		blue="\e[1;34m"
		cyan="\e[1;36m"
		green="\e[1;32m"
		orange="\e[1;33m"
		red="\e[1;31m"
		white="\e[1;37m"
		yellow="\e[1;33m"
		pink="\033[35;1m"
		black="\e[1;30m"
		purple="\e[1;35m"
		violet="\e[1;35m"
	fi
}

function chili-image() {
	# https://www.qemu.org/2021/08/22/fuse-blkexport/
	qemu-img create -f raw foo.img 20G
	parted -s foo.img \
		'mklabel msdos' \
		'mkpart primary ext4 2048s 100%'
	qemu-img convert -p -f raw -O qcow2 foo.img foo.qcow2 && rm foo.img
	file foo.qcow2
	kpartx -l foo.qcow2

	#	qemu-storage-daemon \
	#    --blockdev node-name=prot-node,driver=file,filename=foo.qcow2 \
	#    --blockdev node-name=fmt-node,driver=qcow2,file=prot-node \
	#    --export \
	#    type=fuse,id=exp0,node-name=fmt-node,mountpoint=foo.qcow2,writable=on \
	#    &

	qemu-storage-daemon \
		--blockdev node-name=prot-node,driver=file,filename=foo.qcow2 \
		--blockdev node-name=fmt-node,driver=qcow2,file=prot-node \
		--export \
		type=fuse,id=exp0,node-name=fmt-node,mountpoint=mount-point,writable=on

	file foo.qcow2
	sudo kpartx -av foo.qcow2
	fdisk -l foo.qcow2
	cfdisk foo.qcow2
}

function chili-mapdevice() {
	#sudo mknod -m 0777 /dev/sr0 b 7 10
	#sudo mknod -m 0777 /dev/sr0 b 7 20
	# losetup -P /dev/sr0 $1
	kpartx -av disk.img # mapear
	kpartx -d disk.img  #delete

	# dd if=/dev/zero of=~/file.img bs=1024k count=10
	# losetup --find --show ~/file.img # /dev/loop0
	# mkfs -t ext2 /dev/loop0
	# mount /dev/loop0 /mnt
	# umount /dev/loop0
	# losetup --detach /dev/loop0
}

function chili-setup-img() {
	qemu-img create foo.img -f raw 20G
	qemu-img info foo.img
	losetup --find --show foo.img
	#kpartx -av foo.img # mapear
	#kpartx -d foo.img  #delete
}

#sd=$1
#parted --script $sd -- 															\
#   mklabel gpt             													\
#   mkpart primary fat32      1MiB   100MiB set 1 bios on name 1 BIOS  \
#   mkpart primary fat32      100MiB 200MiB set 2 esp  on name 2 EFI   \
#   mkpart primary linux-swap 200MiB 2GB                  name 3 SWAP  \
#   mkpart primary ext4       2GB 100%                    name 4 ROOT  \
#   align-check optimal 1
#parted --script $sd -- print

#Partição 	Sistema de arquivo 	Tamanho 	Descrição
#/dev/sda1 	(bootloader) 	2M 	Partição de boot BIOS
#/dev/sda1 	ext2 (ou FAT32 se UEFI está sendo usada) 	128M 	Partição boot/Sistema EFI
#/dev/sda3 	(swap) 	512M ou maior 	Partição de swap
#/dev/sda4 	ext4 	Resto do disco 	Partição root

function sh_checkroot() {
	if [ "$(id -u)" != "0" ]; then
		printf "%s\n" "${red} erro: Você não pode executar esta operação a menos que seja root!"
		exit 1
	fi
}

sh_setvarcolors
if [[ $# -eq 0 ]]; then
	printf '%s\n' "${orange}$APP - utilitario para particionamento de disco${reset}"
	printf '%s\n' "${red}Usage:${reset}"
	printf '\t%s\n' "$APP ${yellow}/dev/sdX${reset}"
	printf '\t%s\n' "$APP ${yellow}image.img${reset}"
	exit 1
fi

function sh_parted() {
	sd="$1"
	if fdisk -l "$sd"; then
		echo
		echo "AVISO, CUIDADO, tudo será apagado!!"
		if conf "Continuar com o particionamento?"; then
			parted --script "$sd" -- \
				mklabel gpt \
				mkpart primary fat32 1MiB 3MiB set 1 bios on name 1 BIOS \
				mkpart primary fat32 3MiB 128MiB set 2 esp on name 2 EFI \
				mkpart primary ext4 128MiB 100% name 3 ROOT \
				align-check optimal 1
			parted --script "$sd" -- print
		fi
	fi
}

sh_checkroot "$@"
sh_parted "$@"
